@startuml
'https://plantuml.com/class-diagram

'skinparam package {
'    BackgroundColor #lightgrey/white
'    ArrowColor SeaGreen
'    BorderColor #black
'    BackgroundColor  #orange\white 
'}

package account {

    package account.presentation { 

        interface CartAPI {
            + Cart getCart()
            + void addToCart(Book book, int quantity)
            + void removeFromCart(Book book)
            + void clearCart()
            + double getTotalPrice()
        }

        class CartAPIImpl implements CartAPI

        interface AccountAPI {
            
        }

        class AccountAPIImpl implements AccountAPI
    }

    package account.business {
        package account.business.services{
            class CartService {

            }


            class AccountService {

            }
        }

        package account.business.entities {
            class Account {
                - firstName
                - lastName
                - phone
                - email
                - password
            }

            class Cart {
                - totalPrice
            }
        }
    }
    package account.persistence {
        class CartDAO {

        }


        class AccountDAO {

        }

        CartService -up- CartAPIImpl
        AccountService -up- AccountAPIImpl
        CartDAO -up- CartService
        AccountDAO -up- AccountService
    }

}

package shop {

    package shop.presentation {
        interface BookAPI {
            + Book getBooksBy(Map<BookProperty, String> criteria)

            + Book createBook(String title, String description, String isbn)

            + void setPropertiesFor(Book book, Map<BookProperty, List<String>> properties)
            + void removePropertiesFrom(Book book, Map<BookProperty, List<String>> properties)

            + void addBook(Book book)
            + void deleteBook(Book book)
        }

        class BookAPIImpl implements BookAPI

        interface BookAttributeAPI {
            + List<Author> getAuthors()
            + List<Category> getCategories()
            + List<Publisher> getPublishers()
            + void addAttributes(List<BookAttribute> bookAttributes)
            + void removeAttribute(Category category)
        }

        class BookAttributeAPIImpl implements BookAttributeAPI

    }

    package shop.business {
        together {
            
            package shop.business.entities {
                abstract class BookAttribute {
                    + getName
                    + setName
                    - name
                }

                class Book {
                    - title
                    - description
                    - isbn
                    - publicationDate
                    - price
                    - stockQuantity
                    - publisher
                }

                together {
                    class Category extends BookAttribute

                    class Publisher extends BookAttribute

                    class Author extends BookAttribute
                }

                enum BookProperty {
                    TITLE
                    DESCRIPTION
                    ISBN
                    PUBLICATION_DATE
                    PRICE
                    STOCK_QUANTITY
                    PUBLISHER
                    CATEGORY
                    AUTHOR
                }

            }

            package shop.business.services {

                class BookAttributeService {

                }

                class BookService {

                }
            }
        }
    }

    package shop.persistence {
        
        class BookDAO {

        }


        class BookAttributeDAO {

        }


    }

    BookService -up- BookAPIImpl
    BookDAO -up-- BookService

    BookAttributeDAO -up- BookAttributeService
    BookAttributeService -up- BookAttributeAPIImpl

}

package order {
    class order {
        - orderNumber
        - orderDate
        - totalPrice
    }
}

package deliver {
    class Address {
        - firstName
        - lastName
        - phone
        - street
        - city
        - postalCode
    }

    class delivery {
        - deliveryDate
    }
}

package payment {
    class Invoice {
        - invoiceNumber
        - invoiceDate
        - totalPrice
        - paymentMethod
    }
}

@enduml
